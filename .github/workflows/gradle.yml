name: sparkle-note-deploy

on:
  push:
    branches: [ "dev" , "main"]

jobs:
  deploy:
    name: spring boot server ci-cd
    runs-on: ubuntu-latest

    # 1. 체크아웃 (dev나 main의 코드를 워크플로우로 가져옴)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK 설정 (JDK 21 버전)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Gradle 빌드 (테스트 포함)
      - name: Build
        run: ./gradlew build -x test
        # run: ./gradlew build -x test로 테스트 없이 할 수도 있음

      # 4. 빌드된 .jar 파일을 AWS로 전송
      - name: Upload .jar to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/libs/*.jar,dockerfile,docker-compose-prod.yml"
          target: ~/sparkle-note

      # 5. AWS에서 Docker Compose로 컨테이너 갱신
      - name: Restart application with Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/sparkle-note
            echo "Restarting Docker containers..."
            docker-compose down
            docker rmi sparkle-note-backend
            docker-compose up --build -d

        # 6. Slack으로 알림 -> 필요시 구현 검토
