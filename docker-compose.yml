version: '3.7'

services:
  mysql-db:
    image: mysql:8.0
    env_file:
      - .env
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - ./db/initdb.d:/docker-entrypoint-initdb.d
      - ./db/initdb.d/my.cnf:/etc/mysql/my.cnf
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 15s
      retries: 5
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - "${SPRING_DATA_REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${CONTAINER_NAME:-sparkle-note-backend}
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/${DB_NAME}
      SPRING_DATA_REDIS_HOST: redis
    env_file:
      - .env
    depends_on:
      mysql-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: no

volumes:
  redis-data:
    name: sparkle-note-redis-data
networks:
  app-network:
    name: sparkle-note-network
    driver: bridge